#!/usr/bin/bash

SCREENS=`xrandr --listactivemonitors | sed '1 d' | awk '{print \$4}'` # GEt enabled monitors names
ALL_SCREENS=`bspc query -M --names` # With disabled
SCREEN_AMOUNT=$(echo $SCREENS | wc -w) # Amount of screens as a number
AMOUNT_PER_SCREEN=$[(10 + $SCREEN_AMOUNT - 1) / $SCREEN_AMOUNT] # How many desktops to create per screen

INDEX=1 # Index to keep count of total monitors (Max 10)
SCREEN_COUNT=1 # Which screen we are adding monitors to

case $SCREEN_AMOUNT in 
    1)
        bspc monitor $SCREENS -d 1 2 3 4 5 6 7 8 9 10
        #bspc monitor 'eDP1' -d ' '
        ;;
    2) 
        bspc monitor DP1 -d 1 2 3 4 5
        bspc monitor eDP1 -d 6 7 8 9 10
        ;;
    3)
        bspc monitor DP1 -d 1 2 3 4 
        bspc monitor DP2 -d 5 6 7 
        bspc monitor eDP1 -d 8 9 10
        ;;
esac

# Little wonky script but okay
# while [ $INDEX -lt 11 ]
# do
#     TOTAL_MONITORS="" 
#     for i in `seq $INDEX 1 $[$INDEX + $AMOUNT_PER_SCREEN - 1]` # Make a range from current index to index + amount of desktops
#     do 
#         if [ $INDEX -ge 11 ]
#         then
#             break # In some cases when the amount of screens doesnt devide nicely with 10 we have to avoid making more desktops than wanted
#         fi

#         TOTAL_MONITORS="$TOTAL_MONITORS $i" # Append string
#         INDEX=$[$INDEX+1]
#     done

#     CURRENT_SCREEN=$(echo $SCREENS | tr " " "\n" | sed $SCREEN_COUNT!d) # Sed fetches the specific screen from the query of all screens
#     bspc monitor $CURRENT_SCREEN -d $TOTAL_MONITORS # Send the list of monitors to BSPWM

#     SCREEN_COUNT=$[$SCREEN_COUNT+1] 
# done
